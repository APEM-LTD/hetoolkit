% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_heatmap.R
\name{plot_heatmap}
\alias{plot_heatmap}
\title{Heatmap plot}
\usage{
plot_heatmap(data, x, y, fill, colour = "viridis", lab.x = x, lab.y = y, lab.legend = fill, dual = FALSE, list_out = TRUE, limits = FALSE, save = FALSE, save_dir = getwd(), ...)
}
\arguments{
\item{data}{Name of dataframe or tibble containing data to be processed. Must be in long format (i.e. separate columns for x and y). If list_out is set to TRUE for the missingness information tables, user must supply an expanded and pre-sorted dataset to calculate missing time steps, where data is sorted by y and then x (i.e. sites sorted into date order for all possible date time steps). Function sorts "x" data into increasing timesteps by default.}

\item{x}{Name of column containing variable to be used to define x-axis of heatmap (ideally a time series variable e.g. date or year).}

\item{y}{Name of column containing variable to be used to define y-axis of heatmap (ideally a spatial grouping factor e.g. site_id).}

\item{fill}{Name of column containing variable to be plotted (e.g. flow, WHPT O/E) (continuous variate, integer, or double).}

\item{colour}{A character string indicating the colorramp option to use. Limited to the four viridis package options: "magma" (or "A"), "inferno" (or "B"), "plasma" (or "C"), "viridis" (or "D") or "cividis" (or "E"). Default = "viridis".}

\item{lab.x}{Character string to be used on the y axis. Default is name of y variable.}

\item{lab.legend}{Character string to be used on the legend title. Default is name of fill column variable.}

\item{limits}{Logical value specifying whether or not to trim the data to plot 30 x by 20 y values into one tile. Default = FALSE.}

\item{dual}{Logical value determining whether or not to include a histogram of \% missingness alongside the heatmap. Default = FALSE.}

\item{list_out}{logical value specifying whether or not to produce tabular summaries of data completeness. Default = TRUE.}

\item{save}{Logical value specifying whether or not output plot should be saved to file. Default = FALSE.}

\item{save_dir}{Path to folder where plot should be saved. Default = Current working directory.}

\item{...}{Provision to include additional ggplot plotting and saving arguments, including for example: theme, file type, width and size. See ?theme and ?ggsave for details.}
}
\value{
A list of three elements:
\enumerate{
\item A ggplot tiled heatmap with x (e.g. time) and y (e.g. site) axes. If dual = TRUE, the ggplot object includes a marginal histogram of \% missingness. The plot can be optionally saved as a png file.
If list_out is set to TRUE the list will also contain:
\item A tibble summary of data completeness for each value or level of x: number and proportion of missing observations, and total number of observations.
\item A tibble summary of data completeness for each value or level of y: number and proportion of missing observations, total observations, the number of gaps (sequences of missing time steps) in the dataset, and what the shortest and longest run of missing time steps are. The later three will be NA if there are no missing time steps.
}
}
\description{
The plot_heatmap function is designed to visualise and summarise gaps in time series data. It plots time series data for multiple sites as a tiled heatmap, and optionally produces tabular summaries of data completeness by time period and site. Although designed for application with flow time series data, it can be applied to any type of numerical data, with or without a time dimension.
}
\details{
Requires data in long format (e.g. x, y, fill columns). x and y can be any numeric or categorical data; fill must be numeric.

Large datasets may be difficult to visualise clearly using a single heatmap, and need to be subset prior to executing the function.

If x (or y) is a time series, the user should check that the time series is complete - e.g. a complete sequence of dates should be present in the data, even if the fill variable is NA on some dates. See example below illustration use of expand.grid prior to remedy gaps prior to executing the function.

The examples below illustrate how the data can be aggregated (e.g. to different time steps, e.g. year, season, month) and summarised (e.g. using mean, min, max, sd, count) prior to executing the function to explore patterns and gaps in the data.
}
